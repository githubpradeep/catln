// # Catln Core Library

   This is the start of the Catln core library.
   It defines the fundamental units of the language, core data types, basic compilation, and standard methods.

class Eq
operator==<Eq $T>($T l, $T r) -> Boolean

class Ordering = LT | EQ | GT

// ## Booleans

class Boolean = True | False

instance Boolean of Eq
operator==(True l, True r) = True
operator==(True l, False r) = False
operator==(False l, True r) = False
operator==(False l, False r) = True

operator~(Boolean a) -> Boolean
operator~(True a) = False
operator~(False a) = True

operator&(Boolean l, Boolean r) -> Boolean
operator&(True l, True r) = True
operator&(Boolean l, False r) = False
operator&(False l, Boolean r) = False

operator|(Boolean l, Boolean r) -> Boolean
operator|(True l, Boolean r) = True
operator|(Boolean l, True r) = True
operator|(False l, False r) = False

operator^(Boolean l, Boolean r) -> Boolean
operator^(True l, True r) = False
operator^(True l, False r) = True
operator^(False l, True r) = True
operator^(False l, False r) = False


// ## Integers

class Number = Integer | Float
instance Number of Eq

operator-(Integer a) -> Integer

operator-(Integer l, Integer r) -> Integer
operator+(Integer l, Integer r) -> Integer
operator*(Integer l, Integer r) -> Integer

operator<=(Integer l, Integer r) -> Boolean
operator>=(Integer l, Integer r) -> Boolean
operator<(Integer l, Integer r) -> Boolean
operator>(Integer l, Integer r) -> Boolean
operator==(Integer l, Integer r) -> Boolean
operator!=(Integer l, Integer r) -> Boolean

// ## String

data String
operator==(String l, String r) -> Boolean

toString(String this) -> String = this
toString(Integer this) -> String

// ## IO

data IO
exit(IO this, Integer val) -> IO
println(IO this, String msg) -> IO

// ## Collections

class Option<$T> = $T | None

// ## Core Annotations

annot #assert(Boolean test)
annot #assert(Boolean test, String msg)
annot #print(CatlnResult p)

// ## Result Classes

data CatlnResult(String name, String contents)
www(String html) = CatlnResult(name="index.html", contents=html)

main(IO io) -> IO
llvm(c) -> CatlnResult
mainb else -> CatlnResult = llvm(c=main)


