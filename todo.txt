Fix all compiler warnings
Add tests
    QuickTest
    Test File
    Repl Test
Re-add emit, codegen, jit, cbits (runtime)
Case, conditionals, pattern matching
Types
  type classes
  Property
  Tuple
Map
  fmap, mmap, umap
  map syntax (do notation)
Implicit conversions
Contexts
Imports
Exports
Handle mutual recursion
Include line number in Syntax Results
Formatter

Minor
  Desugarf recognize variable called in itself
  Desugarf recognize mutually calling variables
  Detect unused functions and vars (in desugar?)

Research
  multiple implements type (int monoid with addition, int monoid with multiplication)
  prove function properties (map.map with a function that given two different keys must return different keys will return a map instead of a generic collection)
  multiple possible uses of a type such as Ord. Given any Ordering, the filter function preserves it. But, there can also be default orderings
  How does currying, function composition, point-free style (function with all arguments and number of args inferred) work?
